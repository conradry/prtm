--- /content/alphafold_copy/alphafold/model/folding.py	2022-06-16 23:22:42.489230552 +0000
+++ /content/alphafold/alphafold/model/folding.py	2022-06-16 23:46:03.017505449 +0000
@@ -440,21 +440,17 @@
       name='pair_layer_norm')(
           representations['pair'])
 
-  outputs = []
-  safe_keys = safe_key.split(c.num_layer)
-  for sub_key in safe_keys:
-    activations, output = fold_iteration(
-        activations,
-        initial_act=initial_act,
-        static_feat_2d=act_2d,
-        safe_key=sub_key,
-        sequence_mask=sequence_mask,
-        update_affine=True,
-        is_training=is_training,
-        aatype=batch['aatype'])
-    outputs.append(output)
+  def fold_iter(act, key):
+    return fold_iteration(act, initial_act=initial_act,
+                          static_feat_2d=act_2d,
+                          safe_key=prng.SafeKey(key),
+                          sequence_mask=sequence_mask,
+                          update_affine=True,
+                          is_training=is_training,
+                          aatype=batch['aatype'])
+  keys = jax.random.split(safe_key.get(), c.num_layer)
+  activations, output = hk.scan(fold_iter, activations, keys)
 
-  output = jax.tree_map(lambda *x: jnp.stack(x), *outputs)
   # Include the activations in the output dict for use by the LDDT-Head.
   output['act'] = activations['act']
 
